link: https://leetcode.cn/problems/assign-cookies/

自己A了，进入贪心。两种思路，排序后，小饼干给小胃口（从小到大发）或者大饼干给大胃口（从大到小发）。
注意for和if关系，for的元素是无论如何都会变化的，if内的是满足条件才变的。

class Solution {
    public int findContentChildren(int[] g, int[] s) {
        Arrays.sort(g);
        Arrays.sort(s);
        int i=0;
        int j=0;
        int flag=0;
        while(i<g.length && j<s.length){
            if(g[i]<=s[j]){
                flag++;
                i++;
            }
            j++;
        }
        return flag;
    }
}

class Solution {
    // 思路1：优先考虑饼干，小饼干先喂饱小胃口
    public int findContentChildren(int[] g, int[] s) {
        Arrays.sort(g);
        Arrays.sort(s);
        int start = 0;
        int count = 0;
        for (int i = 0; i < s.length && start < g.length; i++) {
            if (s[i] >= g[start]) {
                start++;
                count++;
            }
        }
        return count;
    }
}

class Solution {
    // 思路2：优先考虑胃口，先喂饱大胃口
    public int findContentChildren(int[] g, int[] s) {
        Arrays.sort(g);
        Arrays.sort(s);
        int count = 0;
        int start = s.length - 1;
        // 遍历胃口
        for (int index = g.length - 1; index >= 0; index--) {
            if(start >= 0 && g[index] <= s[start]) {
                start--;
                count++;
            }
        }
        return count;
    }
}
