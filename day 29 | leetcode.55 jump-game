link: https://leetcode.cn/problems/jump-game/

这道题的思路很巧妙，不要纠结跳几步，而是要去看跳跃范围是否能包含终点。
每次遍历元素，更新覆盖范围，循环条件是在范围内。这样就不断扩大试探能否到达数组末尾。
class Solution {
    public boolean canJump(int[] nums) {
        if (nums.length == 1) {
            return true;
        }
        //覆盖范围, 初始覆盖范围应该是0，因为下面的迭代是从下标0开始的
        int coverRange = 0;
        //在覆盖范围内更新最大的覆盖范围
        for (int i = 0; i <= coverRange; i++) {
            coverRange = Math.max(coverRange, i + nums[i]);
            if (coverRange >= nums.length - 1) {
                return true;
            }
        }
        return false;
    }
}
